#!/usr/bin/env bash

test_01_kb_dir_exist() {
    dir="/var/lib/ldb/test_kb"
    assert "test -e $dir"
}

test_02_kb_content() {
    assert_equals "11" $(echo "dump test_kb/file hex 16" | ../ldb | wc -l) "file table fails"
    assert_equals "5" $(echo "dump keys from test_kb/url" | ../ldb | wc -l) "url table fails"
    assert_equals "5" $(echo "dump test_kb/pivot hex 16" |../ldb | wc -l) "pivot table fails"
    assert_equals "19" $(echo "dump test_kb/wfp hex -1" |../ldb | wc -l) "wfp table fails"
    assert_equals "38" $(echo "dump keys from test_kb/sources" |../ldb | wc -l) "sources table fails"
}

test_03_kb_query() {
    result=$(echo "select from test_kb/file key 0000000000000001 csv hex 16" | ../ldb) 
    assert_equals "0000000000000001,ca80efeae39f6de1,test1/file/to/see/if/the/fisrt/record/is/imported0.test" $result "file table query fails"
    result=$(echo "select from test_kb/url key ba80efea39f6de1c csv hex 8" | ../ldb) 
    assert_equals "ba80efea39f6de1c,com.thoughtworks.dsl,keywords-each_sjs0.6_2.12,1.5.5+1-7a249e3c,2021-12-10,Apache-2.0,pkg:maven/com.thoughtworks.dsl/keywords-each_sjs0.6_2.12,https://repo1.maven.org/maven2/com/qvantel/jsonapi-scala-akka-client_2.12/6.0.1/jsonapi-scala-akka-client_2.12-6.0.1.jar" $result "url table quert fails"
    result=$(echo "select from test_kb/sources key 000124ccd5409c90 csv hex 8" | ../ldb |  head -n1 | tr -cd '[:print:]')
    comp="/*"
   assert_equals "$comp" "$result"
}

test_04_kb_delete_record() {
    echo "delete from test_kb/url records from source_crc64/test_remove_record.txt" | ../ldb -q 
    result=$(echo "select from test_kb/url key ba80efea39f6de1d csv hex 8" | ../ldb -q) 
    assert_equals "ba80efea39f6de1d,test_vendor,test_component,1.0.0_test,2023-11-03,my_license,pkg:test_vendor/test_component,https://testurl.com/download2.zip" $result
    result=$(echo "select from test_kb/url key ba80efea39f6de1f csv hex 8" | ../ldb -q)
    assert_equals "" $result
    echo "delete from test_kb/file record 397754ba49e9e0cf,06e47378dedd2ca5,prettyCheckable-1.1/jquery-1.9.1.min.js" | ../ldb -q 
    result=$(echo "select from test_kb/file key 397754ba49e9e0cf csv hex 16" | ../ldb -q)
    assert_equals "" $result
}

test_05_kb_delete_keys() {
    echo "delete from test_kb/file max 2048 keys 0000100000000001,8510000000000001,b310000000000001" | ../ldb -q
    result=$(echo "select from test_kb/file key 0000100000000001 csv hex 16" | ../ldb)
    result+=$(echo "select from test_kb/file key 8510000000000001 csv hex 16" | ../ldb)
    result+=$(echo "select from test_kb/file key b310000000000001 csv hex 16" | ../ldb)
    assert_equals "" $result
    echo "delete from test_kb/sources max 2048 keys 000124ccd5409c90,000176d2bb21fb2f" | ../ldb -q
    result=$(echo "select from test_kb/sources key 000124ccd5409c90 csv hex 8" | ../ldb)
    result+=$(echo "select from test_kb/sources key 000176d2bb21fb2f csv hex 8" | ../ldb)
    assert_equals "" $result
}

#import again, but with the collate option, so the duplicated will be removed. Then test again the content.
test_06_kb_collate() {
    echo 'bulk insert test_kb from source_crc64/mined with (KEY_SIZE=8,COLLATE=1,VERBOSE=2)' | ../ldb -q
    test_02_kb_content
}

test_07_kb_query_from_file() {
    result=$(../ldb -f source_crc64/test_file_commands.txt | wc -l)
    assert_equals "23" $result
}

test_08_unicode_chars() {
    result=$(echo "select from test_kb/file key b337487d67c0307b csv hex 16" | ../ldb) 
    assert_equals "b337487d67c0307b,e7bc2c903379c1ed,系列1-MyBatis源码解析/第10节课/mybatis-3-master/src/test/java/org/apache/ibatis/submitted/language/VelocitySqlSourceBuilder.java" $result
}

test_09_version_validation() {
    ../ldb -q -u source_crc64/mined2 -n test_kb -q
    result=$(cat /var/lib/ldb/test_kb/version.json)
    assert_equals "{\"monthly\":\"23.10\", \"daily\":\"24.10.23\"}" "$result"
    echo "bulk insert test_kb from source_crc64/mined3 with (FILE_DEL=0,VALIDATE_VERSION=0)" | ../ldb
    result=$(cat /var/lib/ldb/test_kb/version.json)
    assert_equals "{\"monthly\":\"23.10\", \"daily\":\"25.10.23\"}" "$result"
}

test_10_configuration() {
    config="GLOBAL: (KEYS=-1, KEY_SIZE=8, VALIDATE_FIELDS=1, FIELDS=1, VALIDATE_VERSION=1, SORT=1, FILE_DEL=0, OVERWRITE=0, WFP=0, MZ=0, VERBOSE=0, THREADS=20, COLLATE=0, MAX_RECORD=2048, MAX_RAM_PERCENT=50, TMP_PATH=/tmp)"
    sed -i "1s|.*|$config|" /usr/local/etc/scanoss/ldb/test_kb.conf
    
    ../ldb -q -u source_crc64/mined2 -n test_kb -q
    result=$(tac /var/log/scanoss/ldb/test_kb.log | grep -m 1 "GLOBAL configuration:")
    config="GLOBAL configuration: (KEYS=-1, KEY_SIZE=8, VALIDATE_FIELDS=1, FIELDS=1, VALIDATE_VERSION=1, SORT=1, FILE_DEL=0, OVERWRITE=0, WFP=0, MZ=0, VERBOSE=0, THREADS=20, COLLATE=0, MAX_RECORD=2048, MAX_RAM_PERCENT=50, TMP_PATH=/tmp)"
    assert_equals "$config" "$result"
    
    echo "bulk insert test_kb/file from source_crc64/mined/file with (TMP_PATH=/var,FILE_DEL=0,THREADS=30,KEY_SIZE=8)" | ../ldb -q
    config="file configuration: (KEYS=2, KEY_SIZE=8, VALIDATE_FIELDS=1, FIELDS=3, VALIDATE_VERSION=1, SORT=1, FILE_DEL=0, OVERWRITE=0, WFP=0, MZ=0, VERBOSE=0, THREADS=30, COLLATE=0, MAX_RECORD=2048, MAX_RAM_PERCENT=50, TMP_PATH=/var)"
    result=$(tac /var/log/scanoss/ldb/test_kb.log | grep -m 1 "file configuration:")
    assert_equals "$config" "$result"

    config="GLOBAL: (COLLATE=0, MAX_RECORD=2048, MAX_RAM_PERCENT=50, VALIDATE_VERSION=1, TMP_PATH=/tmp)"
    cores=$(nproc)
    threads=$((cores / 2))
    sed -i "1s|.*|$config|" /usr/local/etc/scanoss/ldb/test_kb.conf
    
    echo "bulk insert test_kb/file from source_crc64/mined/file with (TMP_PATH=/var,FILE_DEL=0,KEY_SIZE=8)" | ../ldb -q
    config="file configuration: (KEYS=2, KEY_SIZE=8, VALIDATE_FIELDS=1, FIELDS=3, VALIDATE_VERSION=1, SORT=1, FILE_DEL=0, OVERWRITE=0, WFP=0, MZ=0, VERBOSE=0, THREADS=$threads, COLLATE=0, MAX_RECORD=2048, MAX_RAM_PERCENT=50, TMP_PATH=/var)"
    result=$(tac /var/log/scanoss/ldb/test_kb.log | grep -m 1 "file configuration:")
    assert_equals "$config" "$result"

    echo "bulk insert test_kb from source_crc64/mined with (TMP_PATH=/var,FILE_DEL=0,VALIDATE_VERSION=0,KEY_SIZE=8)" | ../ldb -q
    config="file configuration: (KEYS=2, KEY_SIZE=8, VALIDATE_FIELDS=1, FIELDS=3, VALIDATE_VERSION=0, SORT=1, FILE_DEL=0, OVERWRITE=0, WFP=0, MZ=0, VERBOSE=0, THREADS=$threads, COLLATE=0, MAX_RECORD=2048, MAX_RAM_PERCENT=50, TMP_PATH=/var)"
    result=$(tac /var/log/scanoss/ldb/test_kb.log | grep -m 1 "file configuration:")
    assert_equals "$config" "$result"
}

setup_suite () {
    echo 'bulk insert test_kb from source_crc64/mined with (KEY_SIZE=8)' | ../ldb
}
teardown_suite () {
    rm -rf /var/lib/ldb/test_kb
    rm -rf /usr/local/etc/scanoss/ldb/test_kb.conf
}